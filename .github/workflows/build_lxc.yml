name: Build LXC
on:
  workflow_dispatch:

jobs:
  build_lxc:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        platform: [arm, aarch64]
        LXC_VERSION: ["5.0.3"]

    steps:
      - name: Set Build Architecture
        run: |
          if [ "${{ matrix.platform }}" = "aarch64" ]; then
            echo "arch_name=arm64/v8" >> $GITHUB_ENV
          elif [ "${{ matrix.platform }}" = "arm" ]; then
            echo "arch_name=arm/v7" >> $GITHUB_ENV
          elif [ "${{ matrix.platform }}" = "x86_64" ]; then
            echo "arch_name=amd64" >> $GITHUB_ENV
          fi
          
      - name: Build LXC
        run: |
          # Support for ARM and ARM64
          if [[ "${{ matrix.platform }}" == "arm" || "${{ matrix.platform }}" == "aarch64" ]]; then
              docker run --rm --privileged aptman/qus -s -- -p arm aarch64
          fi

          export LXC_VERSION="${{ matrix.LXC_VERSION }}"
          
          docker run --name "lxc-builder-${{ matrix.platform }}" --platform "linux/${{ env.arch_name }}" ubuntu:jammy bash -c ' \
              DEBIAN_FRONTEND=noninteractive apt update; \
              DEBIAN_FRONTEND=noninteractive apt install -y libapparmor-dev libselinux-dev libseccomp-dev libcap-dev libsystemd-dev systemd wget docbook2x meson pkg-config docbook2x cmake git libssl-dev libpam0g-dev liburing-dev wget ruby; \
              gem install fpm; \
              cd ; \
              mkdir -p project/build/lxc; \
              cd project/build; \
              wget "https://github.com/lxc/lxc/archive/refs/tags/lxc-'${LXC_VERSION}'.tar.gz" -O lxc.tar.gz; \
              tar xf lxc.tar.gz --strip-components=1 -C lxc; \
              cd lxc; \
              sed -i "s/cpuset\.cpus/cpus/g" src/lxc/cgroups/cgfsng.c; \
              sed -i "s/cpuset\.mems/mems/g" src/lxc/cgroups/cgfsng.c; \
              sed -i "s/cpuset\.cpus/cpus/g" src/lxc/pam/pam_cgfs.c; \
              sed -i "s/cpuset\.mems/mems/g" src/lxc/pam/pam_cgfs.c; \
              meson setup -Dprefix=/usr build || exit 1; \
              meson compile -C build || exit 1; \
              DESTDIR=dist meson install -C build; \
              cd build; \
              find dist -type f -exec strip -s "{}" \; 2>/dev/null; \
              package="lxc"; fpm --deb-pre-depends "${package}" -t deb -s dir -C dist --prefix / -f -n "${package}-extra" --provides "${package}-extra" -a native -m "George-Seven" --description "N/A" --url "N/A" -p "lxc-'${LXC_VERSION}'.deb"; \
              mv "lxc-'${LXC_VERSION}'.deb" /tmp; \
          '

          docker cp "lxc-builder-${{ matrix.platform }}":"/tmp/lxc-${LXC_VERSION}.deb" .

      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
           repo_token: ${{ secrets.GITHUB_TOKEN }}
           file: lxc-${{ matrix.LXC_VERSION }}.deb
           asset_name: lxc-${{ matrix.platform }}.deb
           tag: "extras"
           release_name: "Extras"
           body: |
               **LXC v${{ matrix.LXC_VERSION }} -** LXC fixed to support nested virtualization inside container.
               
               This is required if you want to run Waydroid in the phone.
               
               https://github.com/termux/termux-root-packages/issues/60#issuecomment-640381430
               
               https://github.com/termux/termux-packages/blob/master/root-packages/lxc/src-lxc-cgroups-cgfsng.c.patch
               
               https://github.com/termux/termux-packages/blob/master/root-packages/lxc/src-lxc-pam-pam_cgfs.c.patch
           overwrite: true
