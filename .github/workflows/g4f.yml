name: Build g4f
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        PLATFORM: [arm, aarch64, x86, x86_64]
    steps:
      - name: Set Build Architecture
        run: |
          if [ "${{ matrix.PLATFORM }}" = "aarch64" ]; then
            echo "ARCH=arm64/v8" >> $GITHUB_ENV
          elif [ "${{ matrix.PLATFORM }}" = "x86_64" ]; then
            echo "ARCH=amd64" >> $GITHUB_ENV
          elif [ "${{ matrix.PLATFORM }}" = "arm" ]; then
            echo "ARCH=arm/v7" >> $GITHUB_ENV
          elif [ "${{ matrix.PLATFORM }}" = "x86" ]; then
            echo "ARCH=386" >> $GITHUB_ENV
          else
          else
            echo "Unsupported architecture"
            exit 1
          fi

      - name: Build g4f
        run: |
          # Support for ARM64
          if [[ "${{ matrix.PLATFORM }}" == "aarch64" || "${{ matrix.PLATFORM }}" == "arm" ]]; then
              docker run --rm --privileged aptman/qus -s -- -p arm aarch64
          fi
          
          mkdir -p build
          cd build
          echo '
          FROM --platform=linux/'${{ env.ARCH }}' alpine

          WORKDIR /root

          RUN apk add --no-cache -u py3-pip && pip install --root-user-action=ignore --break-system-packages -U g4f flask

          CMD ["ash"]
          
          ' > Dockerfile
          _IMAGE_NAME="g4f"
          echo "_IMAGE_NAME=$_IMAGE_NAME" >> $GITHUB_ENV
          docker build --pull --no-cache --force-rm -t "$_IMAGE_NAME" .
          docker create --name="$_IMAGE_NAME" "$_IMAGE_NAME"
          docker export -o "$_IMAGE_NAME".tar "$_IMAGE_NAME"
          tar -f "$_IMAGE_NAME".tar --delete .dockerenv
          tar -xf "$_IMAGE_NAME".tar etc/resolv.conf
          tar -f "$_IMAGE_NAME".tar --delete etc/resolv.conf
          echo "nameserver 1.1.1.1" > etc/resolv.conf
          tar -rf "$_IMAGE_NAME".tar etc/resolv.conf
          gzip --best "$_IMAGE_NAME".tar

      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
           repo_token: ${{ secrets.GITHUB_TOKEN }}
           file: "build/${{ env._IMAGE_NAME }}.tar.gz"
           asset_name: "${{ env._IMAGE_NAME }}-${{ matrix.PLATFORM }}.tar.gz"
           tag: "g4f"
           release_name: "g4f"
           overwrite: true
