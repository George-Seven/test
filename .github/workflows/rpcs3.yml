name: Build RPCS3
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        ARCH: [arm64, amd64]
      fail-fast: false
    steps:
      - name: Build RPCS3
        run: |
          # Set RPCS3 CI image
          if [ "${{ matrix.ARCH }}" = "arm64" ]; then
            RPCS3_CI_IMAGE="rpcs3/rpcs3-ci-focal-aarch64"
          elif [ "${{ matrix.ARCH }}" = "amd64" ]; then
            RPCS3_CI_IMAGE="rpcs3/rpcs3-ci-focal"
          else
            echo "Unsupported architecture"
            exit 1
          fi
          
          # Support for ARM64
          if [[ "${{ matrix.ARCH }}" == "arm64" ]]; then
              docker run --rm --privileged aptman/qus -s -- -p aarch64
          fi

          # Build RPCS3
          RPCS3_CI_IMAGE_VERSION=$(curl -L --fail "https://hub.docker.com/v2/repositories/$RPCS3_CI_IMAGE/tags/?page_size=1000" | \
          jq '.results | .[] | .name' -r | \
          sed 's/latest//' | \
          sort --version-sort | \
          tail -n 1 | \
          sed 's/\.$/.0/')
          
          BUILD_DIR="rpcs3_build"
          mkdir -p "$BUILD_DIR"
          
          docker run -t -v "$(pwd)/$BUILD_DIR":"/root/$BUILD_DIR" "$RPCS3_CI_IMAGE:$RPCS3_CI_IMAGE_VERSION" bash -c ' \
          cd /root; \
          git clone --depth 1 https://github.com/RPCS3/rpcs3; \
          cd rpcs3; \
          git submodule update --init $(awk '\''/path/ && !/llvm/ && !/opencv/ { print $3 }'\'' .gitmodules); \
          cd .. && mkdir -p '$BUILD_DIR' && cd '$BUILD_DIR'; \
          export CC="${CLANG_BINARY}"; \
          export CXX="${CLANGXX_BINARY}"; \
          export LINKER=lld; \
          export AR=/usr/bin/llvm-ar-"$LLVMVER"; \
          export RANLIB=/usr/bin/llvm-ranlib-"$LLVMVER"; \
          export CFLAGS="$CFLAGS -fuse-ld=${LINKER}"; \
          cmake ../rpcs3/ \
          -DUSE_NATIVE_INSTRUCTIONS=OFF \
          -DUSE_PRECOMPILED_HEADERS=OFF \
          -DCMAKE_C_FLAGS="$CFLAGS" \
          -DCMAKE_CXX_FLAGS="$CFLAGS" \
          -DCMAKE_AR="$AR" \
          -DCMAKE_RANLIB="$RANLIB" \
          -DUSE_SYSTEM_CURL=ON \
          -DUSE_SDL=ON \
          -DUSE_SYSTEM_SDL=ON \
          -DUSE_SYSTEM_FFMPEG=OFF \
          -DUSE_SYSTEM_OPENCV=ON \
          -DUSE_DISCORD_RPC=ON \
          -DOpenGL_GL_PREFERENCE=LEGACY \
          -DLLVM_DIR=/opt/llvm/lib/cmake/llvm \
          -DSTATIC_LINK_LLVM=ON; \
          make \
          '
          
          sudo chmod -R "$(id -u):$(id -g)" "$BUILD_DIR"

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
