name: Generate RPCS3 RootFS Tarball
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        ARCH: [arm64, amd64]
      fail-fast: false
    steps:
      - name: Generate RPCS3 RootFS Tarball
        run: |
          # Support for ARM64
          if [[ "${{ matrix.ARCH }}" == "arm64" ]]; then
              docker run --rm --privileged aptman/qus -s -- -p aarch64
          fi
          
          docker run --name rpcs3 --pull always -t --env DEBIAN_FRONTEND="noninteractive" --platform "linux/${{ matrix.ARCH }}" ubuntu:noble bash -c ' \
          cd /root && \
          apt update -y && \
          apt install -y --no-install-recommends apt-utils dialog sudo adduser && \
          apt install -y --no-install-recommends curl wget ca-certificates jq && \
          wget -O rpcs3.AppImage "$(curl -s https://api.github.com/repos/RPCS3/rpcs3-binaries-linux-arm64/releases/latest | jq -r ".assets[0].browser_download_url")" && \
          dd if=/dev/zero bs=1 count=3 seek=8 conv=notrunc of=rpcs3.AppImage && \
          chmod 755 rpcs3.AppImage && \
          ./rpcs3.AppImage --appimage-extract && \
          rm -rf rpcs3.AppImage && \
          apt install -y --no-install-recommends openbox obconf python3-xdg menu dbus-x11 xterm thunar xdg-utils curl wget ca-certificates jq nano gpg software-properties-common locales libgl1 libopengl0 libegl1 && \
          apt install -y --no-install-recommends libasound2t64 || apt install -y --no-install-recommends libasound2 && \
          sed -i -E "s/#[[:space:]]?(en_US.UTF-8[[:space:]]+UTF-8)/\1/g" /etc/locale.gen && \
          mkdir -p /root/.config/gtk-3.0 && \
          echo -n ".thunar .warning { font-size: 0pt; margin: -30px; }" >/root/.config/gtk-3.0/gtk.css && \
          ln -nsf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime && \
          dpkg-reconfigure tzdata locales && \
          add-apt-repository -y ppa:mastag/mesa-turnip-kgsl && \
          apt update && \
          apt dist-upgrade -y && \
          apt install -y --no-install-recommends mesa-vulkan-drivers && \
          apt autoremove -y && \
          mkdir -p /root/.config/openbox && \
          echo -n "[ -z \"\$DISPLAY\" ] && export DISPLAY=:1" >/root/.config/openbox/environment && \
          echo -n "[ -z \"\$PULSE_SERVER\" ] && export PULSE_SERVER=127.0.0.1" >>/root/.config/openbox/environment && \
          echo -n "LC_ALL=en_US.UTF-8 GALLIUM_DRIVER=zink MESA_LOADER_DRIVER_OVERRIDE=zink TU_DEBUG=noconform vblank_mode=0 VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/freedreno_icd.aarch64.json" >>/root/.config/openbox/environment && \
          echo -n "/root/squashfs-root/AppRun" >/root/.config/openbox/autostart \
          '
          
          docker export -o rpcs3.tar rpcs3
          mkdir -p etc
          echo "nameserver 8.8.8.8" | sudo tee etc/resolv.conf >/dev/null
          echo "127.0.0.1 localhost" | sudo tee etc/hosts >/dev/null
          echo "::1 localhost" | sudo tee -a etc/hosts >/dev/null
          tar -rf rpcs3.tar etc/resolv.conf etc/hosts
          tar -f rpcs3.tar --delete .dockerenv
          gzip --best rpcs3.tar

      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
           repo_token: ${{ secrets.GITHUB_TOKEN }}
           file: "rpcs3.tar.gz"
           asset_name: "rpcs3-rootfs-${{ matrix.ARCH }}.tar.gz"
           tag: "rpcs3-hardware-accelerated"
           release_name: "RPCS3 RootFS Tarball With Hardware Acceleration"
           overwrite: true
