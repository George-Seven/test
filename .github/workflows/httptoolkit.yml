name: Build HTTP Toolkit
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        ARCH: [arm, aarch64, x86, x86_64]
    steps:
      - name: Set Build Architecture
        run: |
          if [ "${{ matrix.ARCH }}" = "aarch64" ]; then
            echo "PLATFORM=arm64" >> $GITHUB_ENV
          elif [ "${{ matrix.ARCH }}" = "x86_64" ]; then
            echo "PLATFORM=amd64" >> $GITHUB_ENV
          elif [ "${{ matrix.ARCH }}" = "arm" ]; then
            echo "PLATFORM=arm" >> $GITHUB_ENV
          elif [ "${{ matrix.ARCH }}" = "x86" ]; then
            echo "PLATFORM=386" >> $GITHUB_ENV
          else
            echo "Unsupported architecture"
            exit 1
          fi

      - name: Build HTTP Toolkit
        run: |
          # Support for ARM and ARM64
          if [[ "${{ matrix.ARCH }}" == "aarch64" ]]; then
              docker run --rm --privileged aptman/qus -s -- -p aarch64
          elif [[ "${{ matrix.ARCH }}" == "arm" ]]; then
              docker run --rm --privileged aptman/qus -s -- -p arm
          fi

          docker run -it --name httptoolkit-builder --platform "linux/${{ env.PLATFORM }}" debian:bullseye bash -c ' \
              export DEBIAN_FRONTEND=noninteractive && \
              apt update && \
              apt install -y dialog apt-utils && \
              apt upgrade -y && \
              apt install -y --no-install-recommends curl ca-certificates git python3 chromium make cmake g++ && \
              export CHROME_BIN="$(which chromium)" && \
              source ~/.bashrc && \
              { command -v nvm &>/dev/null || { curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash && source ~/.bashrc; }; } && \
              nvm install 20.11.1 && \
              { [ -d ~/httptoolkit-ui ] || git clone --depth 1 https://github.com/httptoolkit/httptoolkit-ui ~/httptoolkit-ui; } && \
              mkdir -p ~/httptoolkit-ui/.httptoolkit-server && \
              { [ -d ~/httptoolkit-ui/.httptoolkit-server/httptoolkit-server ] || git clone --depth 1 https://github.com/httptoolkit/httptoolkit-server ~/httptoolkit-ui/.httptoolkit-server/httptoolkit-server; } && \
              cd ~/httptoolkit-ui/.httptoolkit-server/httptoolkit-server && \
              npm install && \
              sed -i "s/OCLIF_TS_NODE=0/OCLIF_TS_NODE=1/g" ~/httptoolkit-ui/package.json && \
              sed -i -E "s/process\.env\.OCLIF_TS_NODE = '\''0'\'';/process.env.OCLIF_TS_NODE = '\''1'\'';/g" ~/httptoolkit-ui/test/integration/smoke-test.spec.ts && \
              cd ~/httptoolkit-ui && \
              npm install && \
              npm test \
          '

          docker cp httptoolkit-builder:/root/httptoolkit-ui httptoolkit-ui
          docker build --pull --no-cache --force-rm -t httptoolkit-server httptoolkit-ui
          docker save httptoolkit-server | gzip --best > httptoolkit-server.tar.gz

      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
           repo_token: ${{ secrets.GITHUB_TOKEN }}
           file: "httptoolkit-server.tar.gz"
           asset_name: "httptoolkit-server-${{ matrix.ARCH }}.tar.gz"
           tag: "httptoolkit"
           release_name: "HTTP Toolkit"
           overwrite: true
