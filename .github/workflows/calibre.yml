name: Build Calibre
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        PLATFORM: [aarch64, x86_64]
    steps:
      - name: Set Build Architecture
        run: |
          if [ "${{ matrix.PLATFORM }}" = "aarch64" ]; then
            echo "ARCH=arm64/v8" >> $GITHUB_ENV
          elif [ "${{ matrix.PLATFORM }}" = "x86_64" ]; then
            echo "ARCH=amd64" >> $GITHUB_ENV
          else
            echo "Unsupported architecture"
            exit 1
          fi

      - name: Build Calibre
        run: |
          pip install -U udocker
          sudo apt install -y qemu-user upx wget
          udocker run --name=calibre --nosysdirs -v /dev -v /proc -v /sys --platform "linux/${{ env.ARCH }}" alpine ash -c 'echo "nameserver 1.1.1.1" > /etc/resolv.conf && echo "@testing https://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories && apk update && apk add --no-cache -u calibre@testing'
          # cd "$HOME/.udocker/containers/calibre/ROOT"
          # chmod 755 -R "lib" "usr/lib" "usr/libexec" "bin" "usr/bin" "sbin" "usr/sbin"
          # find "usr/lib" "usr/libexec" "usr/bin" "usr/sbin" -type f ! -name "ld-*\.so*" ! -name "libc\.so*" -exec upx -qq -1 "{}" \;
          udocker export -o calibre.tar calibre
          mkdir calibre
          wget -O proot https://github.com/proot-me/proot/releases/download/v5.3.0/proot-v5.3.0-x86_64-static
          chmod 755 proot
          ./proot --link2symlink tar -xf calibre.tar -C calibre
          cd calibre
          chmod 755 -R "lib" "usr/lib" "usr/libexec" "bin" "usr/bin" "sbin" "usr/sbin"
          find "lib" "usr/lib" "usr/libexec" "bin" "usr/bin" "sbin" "usr/sbin" -type f ! -name "ld-*\.so*" ! -name "libc\.so*" ! -name "libc\.musl*\.so*" ! -name busybox ! -name "python*" -exec upx -qq -1 --android-shlib "{}" \;
          cd ..
          gzip --help
          tar --help
          tar -I "gzip --best" -cf calibre.tar.gz ./calibre

      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
           repo_token: ${{ secrets.GITHUB_TOKEN }}
           file: "calibre.tar.gz"
           asset_name: "calibre-${{ matrix.PLATFORM }}.tar.gz"
           tag: "calibre"
           release_name: "Calibre"
           overwrite: true
