name: Build Calibre
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        PLATFORM: [aarch64, x86_64]
    steps:
      - name: Set Build Architecture
        run: |
          if [ "${{ matrix.PLATFORM }}" = "aarch64" ]; then
            echo "ARCH=arm64/v8" >> $GITHUB_ENV
          elif [ "${{ matrix.PLATFORM }}" = "x86_64" ]; then
            echo "ARCH=amd64" >> $GITHUB_ENV
          else
            echo "Unsupported architecture"
            exit 1
          fi

      - name: Build Calibre
        run: |
          pip install -U udocker
          sudo apt install -y qemu-user upx
          udocker run --name=calibre --nosysdirs -v /dev -v /proc -v /sys --platform "linux/${{ env.ARCH }}" alpine ash -c 'echo "nameserver 1.1.1.1" > /etc/resolv.conf && echo "@testing https://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories && apk update && apk add --no-cache -u calibre@testing'
          chmod 755 -R "$HOME/.udocker/containers/calibre/ROOT/usr/lib" "$HOME/.udocker/containers/calibre/ROOT/usr/libexec" "$HOME/.udocker/containers/calibre/ROOT/usr/bin" "$HOME/.udocker/containers/calibre/ROOT/usr/sbin"
          find "$HOME/.udocker/containers/calibre/ROOT/usr/lib" "$HOME/.udocker/containers/calibre/ROOT/usr/libexec" "$HOME/.udocker/containers/calibre/ROOT/usr/bin" "$HOME/.udocker/containers/calibre/ROOT/usr/sbin" -type f ! -name "ld-linux-*\.so*" ! -name "libc\.so*" -exec upx -qq --best --lzma "{}" \;
          udocker export calibre | gzip --best > calibre.tar.gz

      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
           repo_token: ${{ secrets.GITHUB_TOKEN }}
           file: "calibre.tar.gz"
           asset_name: "calibre-${{ matrix.PLATFORM }}.tar.gz"
           tag: "calibre"
           release_name: "Calibre"
           overwrite: true
