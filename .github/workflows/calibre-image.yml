name: Build Calibre AppImage
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        ARCH: [aarch64, x86_64]
      fail-fast: false
    steps:
      - name: Set Build Platform Architecture
        run: |
          if [ "${{ matrix.ARCH }}" = "aarch64" ]; then
            echo "PLATFORM=arm64" >> $GITHUB_ENV
          elif [ "${{ matrix.ARCH }}" = "x86_64" ]; then
            echo "PLATFORM=x86_64" >> $GITHUB_ENV
          else
            echo "Unsupported architecture"
            exit 1
          fi

      - name: Build Calibre AppImage
        run: |
          # Support for ARM64
          if [[ "${{ matrix.ARCH }}" == "aarch64" ]]; then
              docker run --rm --privileged aptman/qus -s -- -p aarch64
          fi

          # Build Calibe AppImage
          
          sudo apt-get install -y fuse libfuse2
          
          version=7.19.0
          echo "Calibre version: $version"

          # rm -rf build/
          mkdir -p build/calibre.AppDir/

          # cp calibre.desktop build/calibre.AppDir/

          cat > build/calibre.AppDir/calibre.desktop << 'EOF'
          [Desktop Entry]
          Type=Application
          Name=Calibre
          GenericName=E-book library management
          Comment=E-book library management: Convert, view, share, catalogue all your e-books
          Exec=calibre %F
          Icon=calibre
          MimeType=application/x-mobipocket-ebook;application/epub+zip;x-content/ebook-reader
          Categories=Office;Graphics;Viewer;
          X-GNOME-UsesNotifications=true
          Actions=Ebook-editor;Ebook-viewer;LRF-viewer;
          
          [Desktop Action Ebook-editor]
          Name=Ebook editor
          Exec=ebook-edit %f
          
          [Desktop Action Ebook-viewer]
          Name=Ebook viewer
          Exec=ebook-viewer %f
          
          [Desktop Action LRF-viewer]
          Name=LRF viewer
          Exec=lrfviewer %f

          EOF

          chmod +x build/calibre.AppDir/calibre.desktop

          curl --location -o build/calibre.AppDir/AppRun https://github.com/AppImage/AppImageKit/releases/download/continuous/AppRun-"${{ matrix.ARCH }}"
          chmod +x build/calibre.AppDir/AppRun

          mkdir -p build/calibre.AppDir/usr/bin/
          cd build/calibre.AppDir/usr/bin/
          curl -o - https://download.calibre-ebook.com/$version/calibre-$version-"${{ matrix.PLATFORM }}".txz | tar -xJf -

          pwd
          ls -lah
          cd ../../../../
          pwd
          ls -lah

          cp build/calibre.AppDir/usr/bin/resources/content-server/calibre.png build/calibre.AppDir
          cp README.md build/calibre.AppDir

      - name: Get appimagetool
        run: |
          set -x
          wget https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      - name: Make AppImage
        run:  |
          set -x
          ./appimagetool-x86_64.AppImage build/calibre.AppDir

      - name: List files
        run: |
          set -x
          pwd
          ls -lah

      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
           repo_token: ${{ secrets.GITHUB_TOKEN }}
           file: Calibre*.AppImage
           file_glob: true
           asset_name: "Calibre-${{ matrix.ARCH }}.AppImage"
           tag: "calibre-appimage"
           release_name: "Calibre AppImage"
           overwrite: true
